'use client';

import { useState } from 'react';
import { Mail, Eye, Copy, CheckCircle } from 'lucide-react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import LoadingButton from '@/components/ui/LoadingButton';
import { Lead } from '@/types';
import { toast } from 'sonner';

interface EmailGenerationProps {
  leads: Lead[];
  onEmailsGenerated: (leads: Lead[]) => void;
}

export default function EmailGeneration({ leads, onEmailsGenerated }: EmailGenerationProps) {
  const [emailTone, setEmailTone] = useState('professional');
  
  const enrichedLeads = leads.filter(lead => lead.enriched);

  const generateEmails = async () => {
    await new Promise(resolve => setTimeout(resolve, 2500));
    
    const emailTemplates = {
      friendly: (lead: Lead) => `Hi ${lead.name}! ðŸ‘‹

I came across your profile and was impressed by your work as ${lead.title} at ${lead.company}. 

I'd love to share how our AI-powered lead generation platform could help ${lead.company} scale your customer acquisition efforts with minimal manual work.

Would you be open to a quick 15-minute chat this week?

Best regards,
Team LeadGenius`,
      
      professional: (lead: Lead) => `Dear ${lead.name},

I hope this email finds you well. As the ${lead.title} at ${lead.company}, I believe you'd be interested in our AI-driven lead generation solution.

Our platform has helped similar companies in your industry increase qualified leads by 300% while reducing manual effort by 80%.

I'd appreciate the opportunity to discuss how this could benefit ${lead.company}. Would you have 15 minutes for a brief call this week?

Best regards,
LeadGenius Team`,
      
      bold: (lead: Lead) => `${lead.name},

Your competitors are already using AI to outpace ${lead.company} in lead generation.

While they're generating 3x more qualified leads with our platform, you're still stuck with manual processes.

Ready to level the playing field? 

Let's talk. 15 minutes is all I need to show you how.

- LeadGenius`
    };
    
    const updatedLeads = enrichedLeads.map(lead => ({
      ...lead,
      emailGenerated: true,
      generatedEmail: emailTemplates[emailTone as keyof typeof emailTemplates](lead),
    }));
    
    onEmailsGenerated([...leads.filter(l => !l.enriched), ...updatedLeads]);
  };

  const copyEmail = (email: string) => {
    navigator.clipboard.writeText(email);
    toast.success('Email copied to clipboard!');
  };

  if (enrichedLeads.length === 0) {
    return (
      <Card className="opacity-50">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Mail className="h-5 w-5" />
            <span>Email Generation</span>
          </CardTitle>
          <CardDescription>
            AI-generated cold emails will appear here after enrichment
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="text-center py-8 text-gray-500">
            Enrich leads first to generate emails
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <Mail className="h-5 w-5" />
            <span>Email Generation</span>
            <Badge variant="secondary">{enrichedLeads.length} enriched leads</Badge>
          </div>
          <div className="flex items-center space-x-2">
            <Select value={emailTone} onValueChange={setEmailTone}>
              <SelectTrigger className="w-32">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="friendly">Friendly</SelectItem>
                <SelectItem value="professional">Professional</SelectItem>
                <SelectItem value="bold">Bold</SelectItem>
              </SelectContent>
            </Select>
            <LoadingButton
              onClick={generateEmails}
              variant="outline"
              disabled={enrichedLeads.every(lead => lead.emailGenerated)}
            >
              Generate Emails using LLM Agent
            </LoadingButton>
          </div>
        </CardTitle>
        <CardDescription>
          Personalized cold emails generated by AI based on lead data
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {enrichedLeads.map((lead) => (
            <div
              key={lead.id}
              className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors"
            >
              <div className="flex-1">
                <div className="flex items-center space-x-3">
                  <div>
                    <h4 className="font-medium text-gray-900">{lead.name}</h4>
                    <p className="text-sm text-gray-600">{lead.title} at {lead.company}</p>
                  </div>
                  {lead.emailGenerated && (
                    <CheckCircle className="h-5 w-5 text-green-500" />
                  )}
                </div>
                {lead.emailGenerated && (
                  <div className="mt-2">
                    <p className="text-sm text-gray-600 line-clamp-2">
                      {lead.generatedEmail?.substring(0, 100)}...
                    </p>
                  </div>
                )}
              </div>
              <div className="flex items-center space-x-2">
                {lead.emailGenerated && (
                  <>
                    <Dialog>
                      <DialogTrigger asChild>
                        <Button variant="outline" size="sm">
                          <Eye className="h-4 w-4 mr-1" />
                          Preview
                        </Button>
                      </DialogTrigger>
                      <DialogContent className="max-w-2xl">
                        <DialogHeader>
                          <DialogTitle>Email Preview - {lead.name}</DialogTitle>
                          <DialogDescription>
                            Generated email for {lead.title} at {lead.company}
                          </DialogDescription>
                        </DialogHeader>
                        <div className="mt-4">
                          <div className="bg-gray-50 p-4 rounded-lg">
                            <div className="border-b pb-2 mb-4">
                              <p><strong>To:</strong> {lead.email}</p>
                              <p><strong>Subject:</strong> Scaling lead generation at {lead.company}</p>
                            </div>
                            <div className="whitespace-pre-wrap text-sm">
                              {lead.generatedEmail}
                            </div>
                          </div>
                          <div className="mt-4 flex justify-end">
                            <Button 
                              onClick={() => copyEmail(lead.generatedEmail || '')}
                              variant="outline"
                            >
                              <Copy className="h-4 w-4 mr-2" />
                              Copy Email
                            </Button>
                          </div>
                        </div>
                      </DialogContent>
                    </Dialog>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => copyEmail(lead.generatedEmail || '')}
                    >
                      <Copy className="h-4 w-4" />
                    </Button>
                  </>
                )}
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}